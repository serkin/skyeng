# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Skyeng dictionary API description
  version: "1.0.0"
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /users:
    post:
      parameters:
        - name: Data
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              id_user:
                type: integer
              token:
                type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /challenges:
    post:
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Challenge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /challenges/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/GetChallenge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /challenges/{id}/question:
    get:
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              question:
                type: object
                properties:
                  id_word:
                    type: integer
                  word:
                    type: string
              answers:
                type: array
                items:
                  type: object
                  properties:
                    id_word:
                      type: integer
                    word:
                      type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: Data
          in: body
          required: true
          schema:
            type: object
            properties:
              id_word:
                type: integer
              id_chosen_word:
                type: integer
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              is_correct:
                type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    properties:
      error:
        type: object
        properties:
          error_code:
            type: integer
          error_msg:
            type: string
  Challenge:
    type: object
    properties:
      questions_completed:
        type: integer
      questions_failed:
        type: integer
      questions_total:
        type: integer
      failed_answers:
        type: array
        items:
          type: string
  GetChallenge:
    properties:
      id_challenge:
        type: integer
    allOf:
      - $ref: '#/definitions/Challenge'
      - type: object